/* 
  SkateMap.strings
  SkateBudapest

  Created by Horváth Balázs on 2018. 11. 09..
  Copyright © 2018. Horváth Balázs. All rights reserved.
*/

// ** ENGLISH **

// General:
"ok" = "OK";
"loading" = "Loading";
"cancel" = "Cancel";
"delete" = "Delete";
"settings" = "Settings";

"photoLibrary" = "Photo library";
"takePhoto" = "Camera";
"turnOnPhotosInSettings" = "The application does not have permission to access your photos. To enable access, go to settings and turn on Photos.";
"turnOnCameraInSettings" = "The application does not have permission to access your camera. To enable access, go to settings and turn on Camera.";
"permissionDenied" = "Permission denied";

// SkateMapViewController:
"mapNavBarTitle" = "Map";
"mapTabBarTitle" = "Map";

"filterScreenTitle" = "Filter by place type";
"filterButtonTitle" = "Filter";

"skateparkType" = "Skatepark";
"streetspotType" = "Streetspot";
"skateshopType" = "Skateshop";

// RoutingViewController:
"mapNavigationEmptyViewText" = "Enable location to show navigation options";
"mapNavigationEmptyViewButtonText" = "Enable";
"hour" = "hour";
"minutes" = "minute";
"directions" = "Directions";
"start" = "Start";
"destination" = "Destination";

// SendPlaceViewController:
"submit" = "Submit";
"submitTypeNavBarTitle" = "Type selector";
"submitTextsNavBarTitle" = "Info";
"submitImagesNavBarTitle" = "Images";
"submitPositionNavBarTitle" = "Position";
"submitSummaryNavBarTitle" = "Summary";

// Validation:
"invalidEmailFormat" = "Invalid e-mail address format!";
"imageRequired" = "You must add an image for here!";
"imageSizeTooSmall" = "Image should be bigger than %dx%d pixel!";
"textTooShort" = "Text should be longer than %d character!";
"textTooLong" = "Text should be shorter than %d character!";

// NetworkError:
"networkErrorTitle" = "Network error";
"notConnectedToInternetError" = "Not connected to Internet";
"networkConnectionLostError" = " Connection lost";
"timedOutError" = "Timed out";
"unknownNetworkError" = "Unable to load the data";

// RealmError:
"realmErrorTitle" = "Database error";
"dataNotExistError" = "Requested data not exist in the database";
"unknownRealmError" = "Unable to load the data";
